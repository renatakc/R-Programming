x = 1
2x
2*x
library(xlsx\)
library(xlsx)
install.packages("xlsx")
library*xlsx)
library(xlsx)
installed.packages(rJava)
installed.packages("rJava")
install.packages("rJava")
library(xlsx)
library(xlsx)
library(rJava)
q()
library(xlsx)
q()
library(rJava)
install.packages("rJava")
library(rJava)
loadNamespace("rJava")
loadNamespace("rJava")
library(rJava)
install.packages(igraph)
install.packages("igraph")
install.packages("igraphdata")
install.packages("statnet")
install.packages("intergraph")
install.packages("twitter")
install.packages("twitteR")
install.packages("RCurl")
require(twitteR)
require(RCurl)
setup_twitter_oauth(consumer_key, consumer_secret, access_token, access_secret)
consumer_key <- 'XzrKYjsswrEqD4HH0pWOLLxaE'
consumer_secret <- 'N6ZEyi5CZStiASpwHa7RWQfxPGEE22ntKwJKeGQ3ABqxb6OIam'
access_token <- '43606065-ZH0uf5jWIQ6F2dApoELNPSF33ARuSj7kPXmaQY2xi'
access_secret <- 'H4OoxCNWjJ5953jfftvdclMzsd1ZHKJnH4Ndfi20MMky1'
setup_twitter_oauth(consumer_key, consumer_secret, access_token, access_secret)
data_tweets <- searchTwitter("data", n = 10, lang = "en")
data_tweets
data_tweets <- searchTwitter("renata", n = 5, lang = "en")
data_tweets
require(tm)
install.packages("tm")
install.packages("wordcloud")
require(tm)
require(wordcloud#)
require(wordcloud)
data_science <- searchTwitter("data+science", lang = "en", n = 50, resultType = "recent")
class(data_science)
data_sci_text <- sapply(data_science, function(x) x$getText())
str(data_sci_text)
data_sci_corpus <- Corpus(VectorSource(data_sci_text))
data_sci_text
data_sci_corpus
inspect(data_sci_corpus[1])
inspect(data_sci_corpus[3])
inspect(data_sci_text[3])
data_clean <- tm_map(data_sci_corpus, removePunctuation)
data_clean <- tm_map(data_sci_clean, content_transformer(tolower))
data_clean <- tm_map(data_clean, content_transformer(tolower))
data_clean <- tm_map(data_sci_corpus, removeWords, stopwords("english"))
data_clean <- tm_map(data_sci_corpus, removeNumbers)
data_clean <- tm_map(data_sci_corpus, stripWhitespace)
wordcloud(data_clean)
wordcloud(data_clean, random.order = F, max.words = 50, scale = c(3, 0.5), colors = rainbow(50))
data_science <- searchTwitter("data+science", lang = "en", n = 500, resultType = "recent")
data_sci_text <- sapply(data_science, function(x) x$getText())
str(data_sci_text)
data_sci_corpus <- Corpus(VectorSource(data_sci_text))
inspect(data_sci_corpus[3])
data_clean <- tm_map(data_sci_corpus, removePunctuation)
data_clean <- tm_map(data_clean, content_transformer(tolower))
data_clean <- tm_map(data_sci_corpus, removeWords, stopwords("english"))
data_clean <- tm_map(data_sci_corpus, removeNumbers)
data_clean <- tm_map(data_sci_corpus, stripWhitespace)
wordcloud(data_clean, random.order = F, max.words = 50, scale = c(3, 0.5), colors = rainbow(50))
wordcloud(data_clean, random.order = F, colors = rainbow(50))
data_clean <- tm_map(data_sci_corpus, removeWords, c("data", "science"))
wordcloud(data_clean, random.order = F, max.words = 200, colors = rainbow(50))
wordcloud(data_clean)
data_clean <- tm_map(data_sci_corpus, removePunctuation)
data_clean <- tm_map(data_clean, content_transformer(tolower))
data_clean <- tm_map(data_clean, removeWords, stopwords("english"))
data_clean <- tm_map(data_clean, removeNumbers)
data_clean <- tm_map(data_clean, stripWhitespace)
data_clean <- tm_map(data_clean, removeWords, c("data", "science"))
wordcloud(data_clean, random.order = F, max.words = 200, colors = rainbow(50))
warnings()
wordcloud(data_clean, random.order = F, max.words = 100, colors = rainbow(20))
wordcloud(data_clean, random.order = F, max.words = 50, colors = rainbow(blues9))
wordcloud(data_clean, random.order = F, max.words = 50, colors = rainbow(blue))
wordcloud(data_clean, random.order = F, max.words = 50)
library(xlsx)
install.packages("rJava")
library(xlsx)
library(rJava)
install.packages("swirl")
swirl()
library(swirl)
ls()
rm(list = ls)
rm(list = ls())
swirl()
plot(child ~ parent, galton)
plot(jitter(child,4) ~ parent,galton)
regrline <- line(children ~ parent, galton)
regrline <- lm(children ~ parent, galton)
regrline <- lm(child ~ parent, galton)
abline(regrline, lwd = 3, col = red)
abline(regrline, lwd = 3, col = 'red')
summary(regrline)
library(swirl)
remove(list = ls())
swirl()
plot(child ~ parent, galton)
plot(jitter(child,4) ~ parent,galton)
regrline <- lm(child ~ parent, galton)
abline(regrline, lwd = 3, col = "red")
summary(regrline)
a[:2]
x <- 1:5
x
fix(x)
fix(galton)
install.packages("WideLM")
rm(list = ls())
data("AirPassengers")
anova(AirPassengers)
as.data.frame.table(AirPassengers)
as.data.frame(AirPassengers)
data("airquality")
View(airquality)
data_1 <- as.data.frame(airquality)
anova(data_1)
data_1 <- as.data.frame.table(airquality)
anova(data_1)
data_1 <- as.table(airquality)
anova()
data_1 <- as.data.frame(airquality)
data_2 <- lm(data_1, Ozone ~ Wind)
data_2 <- lm(data_1)
data_2 <- lm(data_1$Ozone~data_1$Wind)
anova(data_2)
data_3 <- anova(data_2)
View(data_3)
View(data_2)
data_2
Anova(data_2)
formula(data_2)
data("ChickWeight")
data("chickwts")
View(chickwts)
feeds <- table(chickwts$feed)
feeds
pie(feeds)
pie(feeds[order(feeds, decreasing = TRUE)],
init.angle = 90,
clockwise = TRUE,
main = "Pie Chart of Feeds from chickwts")
rm(list = ls())
groups <- c(rep("blue", 39),
rep("red", 45),
rep("pink", 23),
rep("purple", 76),
rep("gray", 5))
groups.1 <- table(groups)
groups.2 <- sort(groups.1, decreasing = TRUE)
groups.2
prop.table(groups.2)
round(prop.table(groups.2),2)
round(prop.table(groups.2),2) * 100
install.packages("psych")
prop.test(56, 76)
x <- [10, 9.8, 8, 7.8, 7.7, 7, 6, 5, 4, 2]
y <- [200, 44, 32, 24, 22, 17, 15, 12, 8, 4]
x <- c(10, 9.8, 8, 7.8, 7.7, 7, 6, 5, 4, 2)
y <- c(200, 44, 32, 24, 22, 17, 15, 12, 8, 4)
x
y
Pearson <- cor(x, use = "everything", method = c("pearson", "spearman"))
Pearson <- cor(x, use = "everything", method = "pearson"))
Pearson <- cor(x, use = "all.obs", method = "pearson"))
Pearson <- cor(x, use = "all.obs", method = "pearson")
Pearson <- cor(x, y, use = "all.obs", method = "pearson")
Pearson
Spearman <- cor(x, y, use = "all.obs", method = "spearman")
Spearman
floor(Spearman, 2)
Spearman <- floor(cor(x, y, use = "all.obs", method = "spearman"))
Spearman
Spearman <- round((cor(x, y, use = "all.obs", method = "spearman"), digits = 3)
rm(list = ls())
x <- c(95,85,80,70,60)
y <- c(85,95,70,65,70)
lin_reg <- lm(x ~ y)
summary(lin_reg)
anova(lin_reg)
sqrt(lin_reg)
sqrt(x)
sqrt(x,y)
lsfit(x, y, intercept = TRUE)
lin_reg <- lm(y ~ x)
summary(lin_reg)
lin_reg$coefficients
lin_reg$coefficients[1]
x_fcst <- 80
y_80 <- lin_reg$coefficients[1] + (lin_reg$coefficients[2]*x_fcst)
y_80
round(y_80, digits = 3)
round(y_80, digits = 1)
max <- 9800
load <- 49
mean <- 205
st.dev <- 15
x <- rnorm(49, mean = mean, sd = st.dev)
x
hist(x, probability = TRUE)
x <- rnorm(max, mean = mean, sd = st.dev)
x
hist(x, probability = TRUE)
m_box <- max/load
m_box
sd_1 <- st.dev/(sqrt(load))
sd_q
sd_1
pnorm(max, mean = mean, sd = sd_1, lower.tail = TRUE)
pnorm(load, mean = mean, sd = sd_1, lower.tail = TRUE)
prob <- round(pnorm(load, mean = mean, sd = sd_1, lower.tail = TRUE), digits = 3)
prob
prob <- round(pnorm(load, mean = mean, sd = sd_1, lower.tail = FALSE), digits = 4)
prob
prob <- floor(pnorm(load, mean = mean, sd = sd_1, lower.tail = FALSE), digits = 4)
prob <- floor(pnorm(load, mean = mean, sd = sd_1, lower.tail = FALSE))
prob
prob <- pnorm(load, mean = mean, sd = sd_1, lower.tail = FALSE)
prob
max <- 250
load <- 100
mean <- 2.4
st.dev <- 2
m_box <- max/load
sd_1 <- st.dev/(sqrt(load))
sd_1
sd_1 <- round(st.dev/(sqrt(load)), digits = 4)
sd_1
rm(list = ())
rm(list = ls())
getwd()
rm(list = ls())
a <- seq(1:100)
a
x <- (-4*a-8)/3
x
x <- round((-4*a-8)/3, digits = 3)
x
x <- round((-4*a-8)/3, digits = 2)
cor.test(a, x, method = "Pearson")
cor.test(a, x, method = "pearson")
pearson <- cor.test(a, x, method = "pearson")
pearson$parameter
rm(list = ls())
3/4
4/3
x <- 3/4
y <- 4/3
x*y
floor(x*y)
round(x*y, digits = 2)
y*y
x*x
slope <- sqrt(y*y)
slope
sqrt(y)
y
1-(y*y)
0.4*(4/8)
0.4*(8/4)
(sqrt(0.4)*2)
(sqrt(0.4)*0.5)
rm(list = ls())
rnorm()
rnorm(5)
runif(3)
round(rnorm(3))
round(rnorm(3),3)
round(rnorm(3),2)
setwd("C:\Users\Re\Documents\R")
setwd("C:/Users/Re/Documents/R")
house <- read.csv("house_price.csv", header = TRUE)
View(house)
house <- as.data.frame(house)
house1 <- house[,c(1,2,3,8,9)]
View(house1)
aggregate(house1, by = list(house1$Zip_Code),FUN = mean)[3]
group <- aggregate(house1$Zip_Code, by = list(house1$Price), FUN = mean)[3]
warnings()
install.packages("dplyr")
library(dplyr)
